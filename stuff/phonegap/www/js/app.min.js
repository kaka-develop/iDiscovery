!function(){"use strict";function run(DatabaseService){DatabaseService.initialize()}angular.module("iDiscoveryApp",["ngMaterial","ui.router","ngMessages","mdPickers","ngCordova"]).run(run),run.$inject=["DatabaseService"]}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("app",{abstract:!0,views:{"toolbar@":{templateUrl:"app/layouts/toolbar/toolbar.html",controller:"ToolbarController",controllerAs:"vm"}}})}angular.module("iDiscoveryApp").config(stateConfig),stateConfig.$inject=["$stateProvider"]}(),function(){"use strict";function AlertController($scope,params){this.msg=params.msg}angular.module("iDiscoveryApp").controller("AlertController",AlertController),AlertController.$inject=["$scope","params"]}(),function(){"use strict";function AlertService(){function getService($mdToast){function success(msg){return show(msg,"")}function error(msg){return show(msg,"m-toast-error")}function warning(msg){return show(msg,"m-toast-warning")}function show(msg,style){$mdToast.show({hideDelay:3e3,toastClass:style,templateUrl:"app/alert/alert.html",controller:"AlertController",controllerAs:"vm",resolve:{params:[function(){return{msg:msg}}]}})}return{success:success,error:error,warning:warning}}this.$get=getService,getService.$inject=["$mdToast"]}angular.module("iDiscoveryApp").provider("AlertService",AlertService)}(),function(){"use strict";function DatabaseService($window,GeneratoreService,ConvertService){function initialize(){function firstCreate(){createTables()}db=$window.openDatabase("idiscovery_db","1.0","iDiscovery database",2097152,firstCreate),createTables()}function getDB(){return db}function createTables(){createEventTable(),createReportTable()}function createEventTable(){function onSuccess(){insertDefaultEvents()}db.transaction(function(tx){tx.executeSql("CREATE TABLE event (id INTEGER NOT NULL UNIQUE,activity_name TEXT NOT NULL,reporter_name TEXT NOT NULL,activity_date DATE NOT NULL,activity_location TEXT,attending_time DATETIME)",null,onSuccess)})}function insertDefaultEvents(){var query="INSERT INTO event(id,activity_name,reporter_name,activity_date,activity_location,attending_time) VALUES (?,?,?,?,?,?)";db.transaction(function(tx){var data=[2131214121213,"Running","John Terry",ConvertService.convertDateToString(new Date),"15 Street London",ConvertService.convertDateToString(new Date)];tx.executeSql(query,data),data=[123129312812,"Eating","Recardo Kaka",ConvertService.convertDateToString(new Date),"10 Street London",ConvertService.convertDateToString(new Date)],tx.executeSql(query,data),data=[9912121894121020,"Playing football","Cristinano Ronaldo",ConvertService.convertDateToString(new Date),"25 Street London",ConvertService.convertDateToString(new Date)],tx.executeSql(query,data),data=[GeneratoreService.generateID(),"Watching movies","Eden Hazard",ConvertService.convertDateToString(new Date),"27 Street London",ConvertService.convertDateToString(new Date)],tx.executeSql(query,data),data=[GeneratoreService.generateID(),"Easy communication","Lion Messi",ConvertService.convertDateToString(new Date),"28 Street London",ConvertService.convertDateToString(new Date)],tx.executeSql(query,data)})}function createReportTable(){function onSuccess(){insertDefaultReports()}db.transaction(function(tx){tx.executeSql("CREATE TABLE report (id INTEGER NOT NULL UNIQUE,person_number INT NOT NULL,topic TEXT NOT NULL,description TEXT NOT NULL,event_id INT NOT NULL,FOREIGN KEY (event_id) REFERENCES event(id))",null,onSuccess)})}function insertDefaultReports(){var query="INSERT INTO report VALUES (?,?,?,?,?)";db.transaction(function(tx){var data=[GeneratoreService.generateID(),50,"Good cooking","This is great event I have not ever participate. During event, I join cooking, eating and drawing contests.",2131214121213];tx.executeSql(query,data),data=[GeneratoreService.generateID(),100,"Having fun","This is great event I have not ever participate. During event, I join dancing and joking contests.",123129312812],tx.executeSql(query,data),data=[GeneratoreService.generateID(),200,"Sports for health","This is great event I have not ever participate. During event, I join playing football, tenis and golf.",9912121894121020],tx.executeSql(query,data)})}var instance={initialize:initialize,getDB:getDB},db=null;return instance}angular.module("iDiscoveryApp").factory("DatabaseService",DatabaseService),DatabaseService.$inject=["$window","GeneratoreService","ConvertService"]}(),function(){"use strict";function EventTableService(DatabaseService,GeneratoreService,ConvertService,$q){function all(){return $q(function(resolve){var list=[];db.transaction(function(tx){tx.executeSql("SELECT * FROM event",[],function(tx,results){for(var i=0;i<results.rows.length;i++){var item=results.rows.item(i);item.activity_date=new Date(item.activity_date),item.attending_time=new Date(item.attending_time),list.push(item)}resolve(list)})})})}function insert(item){return $q(function(resolve){db.transaction(function(tx){var data=[GeneratoreService.generateID(),item.activity_name,item.reporter_name,ConvertService.convertDateToString(item.activity_date),item.activity_location,ConvertService.convertDateToString(item.attending_time)];tx.executeSql("INSERT INTO event(id,activity_name,reporter_name,activity_date,activity_location,attending_time) VALUES (?,?,?,?,?,?)",data,function(){resolve(!0)})})})}function get(id){return $q(function(resolve){var item=null;db.transaction(function(tx){tx.executeSql("SELECT * FROM event WHERE id=?",[id],function(tx,results){for(var length=results.rows.length,i=0;i<length;i++){item=results.rows.item(0),item.activity_date=new Date(item.activity_date),item.attending_time=new Date(item.attending_time);break}resolve(item)})})})}function del(id){return $q(function(resolve){db.transaction(function(tx){tx.executeSql("DELETE FROM event WHERE id=?",[id],function(){resolve(!0)})})})}function update(item){return $q(function(resolve){db.transaction(function(tx){var data=[item.activity_name,item.reporter_name,ConvertService.convertDateToString(item.activity_date),item.activity_location,ConvertService.convertDateToString(item.attending_time),item.id];tx.executeSql("UPDATE event SET activity_name=?, reporter_name=?, activity_date=?, activity_location=?, attending_time=? WHERE id=?",data,function(){resolve(!0)})})})}function search(field,text,startDate,endDate){return $q(function(resolve){var list=[],query="SELECT * FROM event WHERE "+field+" LIKE '%"+text+"%'";null!=startDate&&null==endDate&&(query="SELECT * FROM event WHERE "+field+" LIKE '%"+text+"%' and activity_date >= '"+ConvertService.convertDateToString(startDate)+"'"),null==startDate&&null!=endDate&&(query="SELECT * FROM event WHERE "+field+" LIKE '%"+text+"%' and activity_date <= '"+ConvertService.convertDateToString(endDate)+"'"),null!=startDate&&null!=endDate&&(query="SELECT * FROM event WHERE "+field+" LIKE '%"+text+"%' and activity_date between '"+ConvertService.convertDateToString(startDate)+"' and '"+ConvertService.convertDateToString(endDate)+"'"),db.transaction(function(tx){tx.executeSql(query,[],function(tx,results){for(var i=0;i<results.rows.length;i++){var item=results.rows.item(i);item.activity_date=new Date(item.activity_date),item.attending_time=new Date(item.attending_time),list.push(item)}resolve(list)})})})}var instance={all:all,insert:insert,get:get,del:del,update:update,search:search},db=DatabaseService.getDB();return instance}angular.module("iDiscoveryApp").factory("EventTableService",EventTableService),EventTableService.$inject=["DatabaseService","GeneratoreService","ConvertService","$q"]}(),function(){"use strict";function ReportTableService(DatabaseService,GeneratoreService,$q){function all(){return $q(function(resolve){var list=[];db.transaction(function(tx){tx.executeSql("SELECT * FROM report",[],function(tx,results){for(var i=0;i<results.rows.length;i++){var item=results.rows.item(i);list.push(item)}resolve(list)})})})}function insert(item){return $q(function(resolve){db.transaction(function(tx){var data=[GeneratoreService.generateID(),item.person_number,item.topic,item.description,item.event_id];tx.executeSql("INSERT INTO report(id,person_number,topic,description,event_id) VALUES (?,?,?,?,?)",data,function(){resolve(!0)})})})}function get(id){return $q(function(resolve){var item=null;db.transaction(function(tx){tx.executeSql("SELECT * FROM report WHERE id=?",[id],function(tx,results){for(var length=results.rows.length,i=0;i<length;i++){item=results.rows.item(0);break}resolve(item)})})})}function getByEventId(id){return $q(function(resolve){var item=null;db.transaction(function(tx){tx.executeSql("SELECT * FROM report WHERE event_id=?",[id],function(tx,results){for(var length=results.rows.length,i=0;i<length;i++){item=results.rows.item(0);break}resolve(item)})})})}function isEventExisted(id){return $q(function(resolve){db.transaction(function(tx){tx.executeSql("SELECT * FROM report WHERE event_id=?",[id],function(tx,results){resolve(0!=results.rows.length)})})})}function del(id){return $q(function(resolve){db.transaction(function(tx){tx.executeSql("DELETE FROM report WHERE id=?",[id],function(){resolve(!0)})})})}function search(field,text){return $q(function(resolve){var list=[],query="SELECT * FROM report WHERE "+field+" LIKE '%"+text+"%'";db.transaction(function(tx){tx.executeSql(query,[],function(tx,results){for(var i=0;i<results.rows.length;i++){var item=results.rows.item(i);list.push(item)}resolve(list)})})})}function update(item){return $q(function(resolve){db.transaction(function(tx){var data=[item.person_number,item.topic,item.description,item.event_id,item.id];tx.executeSql("UPDATE report SET person_number=?, topic=?, description=?, event_id=?",data,function(){resolve(!0)})})})}var instance={all:all,insert:insert,get:get,del:del,update:update,search:search,getByEventId:getByEventId,isEventExisted:isEventExisted},db=DatabaseService.getDB();return instance}angular.module("iDiscoveryApp").factory("ReportTableService",ReportTableService),ReportTableService.$inject=["DatabaseService","GeneratoreService","$q"]}(),function(){"use strict";function html5ModeConfig($locationProvider){$locationProvider.html5Mode({enabled:!0,requireBase:!0})}angular.module("iDiscoveryApp").config(html5ModeConfig),html5ModeConfig.$inject=["$locationProvider"]}(),function(){"use strict";function HomeController($scope){}angular.module("iDiscoveryApp").controller("HomeController",HomeController),HomeController.$inject=["$scope"]}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("home",{parent:"app",url:"/",views:{"content@":{templateUrl:"app/home/home.html",controller:"HomeController",controllerAs:"vm"}}})}angular.module("iDiscoveryApp").config(stateConfig),stateConfig.$inject=["$stateProvider"]}(),function(){"use strict";function ConvertService(){function convertDateToString(date){return date.toISOString().substring(0,10)}return{convertDateToString:convertDateToString}}angular.module("iDiscoveryApp").factory("ConvertService",ConvertService),ConvertService.$inject=[]}(),function(){"use strict";function GeneratoreService(){function generateID(){this.length=16,this.timestamp=+new Date;for(var ts=this.timestamp.toString(),parts=ts.split("").reverse(),id="",i=0;i<this.length;++i){id+=parts[function(min,max){return Math.floor(Math.random()*(max-min+1))+min}(0,parts.length-1)]}return id}return{generateID:generateID}}angular.module("iDiscoveryApp").factory("GeneratoreService",GeneratoreService),GeneratoreService.$inject=[]}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("user",{parent:"app",abstract:!0})}angular.module("iDiscoveryApp").config(stateConfig),stateConfig.$inject=["$stateProvider"]}(),function(){"use strict";function ToolbarController($state){this.currentState=$state.current.name}angular.module("iDiscoveryApp").controller("ToolbarController",ToolbarController),ToolbarController.$inject=["$state"]}(),function(){"use strict";function EventAddEditController($scope,$state,entity,EventService,$mdDialog){function submit(){showDialog()}function showDialog(){$mdDialog.show({templateUrl:"app/user/event/event-dialog.html",controller:"EventDialogController",controllerAs:"vm",clickOutsideToClose:!0,fullscreen:!1,resolve:{entity:[function(){return vm.event}]}})}var vm=this;vm.event=entity,vm.submit=submit}angular.module("iDiscoveryApp").controller("EventAddEditController",EventAddEditController),EventAddEditController.$inject=["$scope","$state","entity","EventService","$mdDialog"]}(),function(){"use strict";function EventDetailController($scope,$state,entity){this.event=entity}angular.module("iDiscoveryApp").controller("EventDetailController",EventDetailController),EventDetailController.$inject=["$scope","$state","entity"]}(),function(){"use strict";function EventDialogController($scope,$state,entity,EventService,$mdDialog){function closeDialog(){$mdDialog.cancel("cancel")}function save(){null==vm.event.id?EventService.add(vm.event):EventService.update(vm.event),$mdDialog.hide(),$state.go("event",null,{reload:"event"})}var vm=this;vm.event=entity,vm.save=save,vm.closeDialog=closeDialog}angular.module("iDiscoveryApp").controller("EventDialogController",EventDialogController),EventDialogController.$inject=["$scope","$state","entity","EventService","$mdDialog"]}(),function(){"use strict";function EventController($scope,$state,EventService){function search(){EventService.search(vm.field,vm.text,vm.startDate,vm.endDate).then(function(value){vm.events=value})}function reset(){vm.field="activity_name",vm.text="",vm.startDate=null,vm.endDate=null,search()}var vm=this;vm.field="activity_name",vm.text="",vm.startDate=null,vm.endDate=null,vm.events=[],vm.search=search,vm.reset=reset,vm.fields=[{title:"Activity Name",value:"activity_name"},{title:"Reporter Name",value:"reporter_name"},{title:"Activity Location",value:"activity_location"}],search()}angular.module("iDiscoveryApp").controller("EventController",EventController),EventController.$inject=["$scope","$state","EventService"]}(),function(){"use strict";function EventService(EventTableService){function all(){return EventTableService.all()}function add(item){return EventTableService.insert(item)}function get(id){return EventTableService.get(id)}function update(item){return EventTableService.update(item)}function del(id){return EventTableService.del(id)}function search(field,text,startDate,endDate){return EventTableService.search(field,text,startDate,endDate)}return{all:all,add:add,del:del,get:get,update:update,search:search}}angular.module("iDiscoveryApp").factory("EventService",EventService),EventService.$inject=["EventTableService"]}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("event",{parent:"user",url:"/event",views:{"content@":{templateUrl:"app/user/event/events.html",controller:"EventController",controllerAs:"vm"}}}).state("event.new",{url:"/new",views:{"content@":{templateUrl:"app/user/event/event-addedit.html",controller:"EventAddEditController",controllerAs:"vm"}},resolve:{entity:[function(){return{id:null,activity_name:null,reporter_name:null,activity_location:null,attending_time:new Date,activity_date:new Date}}]}}).state("event.detail",{url:"/detail/{id}",views:{"content@":{templateUrl:"app/user/event/event-detail.html",controller:"EventDetailController",controllerAs:"vm"}},resolve:{entity:["$stateParams","EventService",function($stateParams,EventService){return EventService.get($stateParams.id)}]}}).state("event.edit",{url:"/edit/{id}",views:{"content@":{templateUrl:"app/user/event/event-addedit.html",controller:"EventAddEditController",controllerAs:"vm"}},resolve:{entity:["$stateParams","EventService",function($stateParams,EventService){return EventService.get($stateParams.id)}]}}).state("event.delete",{url:"/delete/{id}",onEnter:["$stateParams","$state","$mdDialog","EventService","ReportService","AlertService",function($stateParams,$state,$mdDialog,EventService,ReportService,AlertService){ReportService.isEventExisted($stateParams.id).then(function(value){if(value)return void AlertService.error("Event has the report!");var confirm=$mdDialog.confirm().title("You delete this event?").textContent("This event and its details will be lost forever!").ariaLabel("Lucky day").ok("Yes").cancel("Cancel");$mdDialog.show(confirm).then(function(){EventService.del($stateParams.id).then(function(){$state.go("event",null,{reload:"event"})})},function(){$state.go("event")})})}]})}angular.module("iDiscoveryApp").config(stateConfig),stateConfig.$inject=["$stateProvider"]}(),function(){"use strict";function ReportAddEditController($scope,$state,entity,ReportService,$mdDialog,EventService,AlertService){function submit(){ReportService.isEventExisted(vm.report.event_id).then(function(value){value?(vm.report.event_id=null,AlertService.error("This event already has a report!")):showDialog()})}function showDialog(){$mdDialog.show({templateUrl:"app/user/report/report-dialog.html",controller:"ReportDialogController",controllerAs:"vm",clickOutsideToClose:!0,fullscreen:!1,resolve:{entity:[function(){return vm.report}]}})}var vm=this;vm.report=entity,vm.submit=submit,vm.events=[],function(){EventService.all().then(function(value){vm.events=value})}()}angular.module("iDiscoveryApp").controller("ReportAddEditController",ReportAddEditController),ReportAddEditController.$inject=["$scope","$state","entity","ReportService","$mdDialog","EventService","AlertService"]}(),function(){"use strict";function ReportDetailController($scope,$state,entity,$cordovaSocialSharing){function share(){var subject=vm.topic,message=vm.report.description;$cordovaSocialSharing.share(message,subject,null,null).then(function(result){console.log(result)},function(err){console.log(err)})}var vm=this;vm.report=entity,vm.share=share}angular.module("iDiscoveryApp").controller("ReportDetailController",ReportDetailController),ReportDetailController.$inject=["$scope","$state","entity","$cordovaSocialSharing"]}(),function(){"use strict";function ReportDialogController($scope,$state,entity,ReportService,$mdDialog){function closeDialog(){$mdDialog.cancel("cancel")}function save(){null==vm.report.id?ReportService.add(vm.report):ReportService.update(vm.report),$mdDialog.hide(),$state.go("report",null,{reload:"report"})}var vm=this;vm.report=entity,vm.save=save,vm.closeDialog=closeDialog}angular.module("iDiscoveryApp").controller("ReportDialogController",ReportDialogController),ReportDialogController.$inject=["$scope","$state","entity","ReportService","$mdDialog"]}(),function(){"use strict";function ReportViewController($scope,$state,EventService,ReportService){function findReport(){ReportService.getByEventId(vm.event_id).then(function(value){vm.report=value})}var vm=this;vm.events=[],vm.event_id=null,vm.report=null,vm.findReport=findReport,function(){EventService.all().then(function(value){vm.events=value})}()}angular.module("iDiscoveryApp").controller("ReportViewController",ReportViewController),ReportViewController.$inject=["$scope","$state","EventService","ReportService"]}(),function(){"use strict";function ReportController($scope,$state,ReportService){function search(){ReportService.search(vm.field,vm.text).then(function(value){vm.reports=value})}var vm=this;vm.field="topic",vm.text="",vm.reports=[],vm.search=search,vm.fields=[{title:"Person Number",value:"person_number"},{title:"Topic",value:"topic"},{title:"Description",value:"description"}],search()}angular.module("iDiscoveryApp").controller("ReportController",ReportController),ReportController.$inject=["$scope","$state","ReportService"]}(),function(){"use strict";function ReportService(ReportTableService){function all(){return ReportTableService.all()}function add(item){return ReportTableService.insert(item)}function get(id){return ReportTableService.get(id)}function update(item){return ReportTableService.update(item)}function getByEventId(id){return ReportTableService.getByEventId(id)}function del(id){return ReportTableService.del(id)}function search(field,text){return ReportTableService.search(field,text)}function isEventExisted(id){return ReportTableService.isEventExisted(id)}return{all:all,add:add,del:del,get:get,update:update,search:search,getByEventId:getByEventId,isEventExisted:isEventExisted}}angular.module("iDiscoveryApp").factory("ReportService",ReportService),ReportService.$inject=["ReportTableService"]}(),function(){"use strict";function stateConfig($stateProvider){$stateProvider.state("report",{parent:"user",url:"/report",views:{"content@":{templateUrl:"app/user/report/reports.html",controller:"ReportController",controllerAs:"vm"}}}).state("report.new",{url:"/new",views:{"content@":{templateUrl:"app/user/report/report-addedit.html",controller:"ReportAddEditController",controllerAs:"vm"}},resolve:{entity:[function(){return{id:null,person_number:null,topic:null,description:null,event_id:null}}]}}).state("report.detail",{url:"/detail/{id}",views:{"content@":{templateUrl:"app/user/report/report-detail.html",controller:"ReportDetailController",controllerAs:"vm"}},resolve:{entity:["$stateParams","ReportService",function($stateParams,ReportService){return ReportService.get($stateParams.id)}]}}).state("report.edit",{url:"/edit/{id}",views:{"content@":{templateUrl:"app/user/report/report-addedit.html",controller:"ReportAddEditController",controllerAs:"vm"}},resolve:{entity:["$stateParams","ReportService",function($stateParams,ReportService){return ReportService.get($stateParams.id)}]}}).state("report.delete",{url:"/delete/{id}",onEnter:["$stateParams","$state","$mdDialog","ReportService",function($stateParams,$state,$mdDialog,ReportService){var confirm=$mdDialog.confirm().title("You delete this report?").textContent("This report and its details will be lost forever!").ariaLabel("Lucky day").ok("Yes").cancel("Cancel");$mdDialog.show(confirm).then(function(){ReportService.del($stateParams.id).then(function(){$state.go("report",null,{reload:"report"})})},function(){$state.go("report")})}]}).state("report.view",{url:"/view",views:{"content@":{templateUrl:"app/user/report/report-view.html",controller:"ReportViewController",controllerAs:"vm"}}})}angular.module("iDiscoveryApp").config(stateConfig),stateConfig.$inject=["$stateProvider"]}();